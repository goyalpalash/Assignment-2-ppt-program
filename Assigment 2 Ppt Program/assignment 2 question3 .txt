// importing HashMap and Map that are required  
// in the program  
import java.util.HashMap;  
import java.util.Map;  
  
public class LongestHarmonioussubsequence2  
{  
public int lengthOfLHS(int[] inputArr, int len)  
{  
int ans = 0; // for storing the final answer  
  
// HashMap to store the count of every element.  
Map<Integer, Integer> freqHashMap = new HashMap<Integer, Integer>();  
  
// Iterating over the input array.  
for (int j = 0; j < len; j++)  
{  
    // Incrementing the count of inputArr[j].  
    int cnt = (freqHashMap.containsKey(inputArr[j])) ? freqHashMap.get(inputArr[j]) : 0;  
    freqHashMap.put(inputArr[j], cnt + 1);  
  
      
    //    If inputArr[j] + 1 is present, then it means it is possible to create a harmonic subsequence  
    //    using all the occurrences of inputArr[j] and inputArr[j] + 1.  
      
    if (freqHashMap.containsKey(inputArr[j] + 1))  
    {  
        ans = Math.max(ans, freqHashMap.get(inputArr[j]) + freqHashMap.get(inputArr[j] + 1));  
  
    }  
  
    // If inputArr[j] - 1 is present, then it means it is possible to make a harmonic subsequence  
    // using all of the occurences of the inputArr[j] and inputArr[j] - 1.  
    if (freqHashMap.containsKey(inputArr[j] - 1))  
    {  
        ans = Math.max(ans, freqHashMap.get(inputArr[j]) + freqHashMap.get(inputArr[j] - 1));  
    }  
}  
  
return ans;  
}  
  
// main method  
public static void main(String args[])   
{  
  // creating an object of the class LongestHarmonioussubsequence2  
LongestHarmonioussubsequence2 obj = new LongestHarmonioussubsequence2();  
  
// input array  
int inputArr[] = {11, 12, 12, 13, 14, 15, 11, 11, 11, 11};  
int sze = inputArr.length; // computing size of the input array  
  
System.out.println("For the input array: ");  
for(int i = 0 ; i < sze; i++)  
{  
System.out.print(inputArr[i] + " ");  
}  
System.out.println( );  
// invoking the method lengthOfLHS() for computing the   
// longest length of the Harmonic subsequence  
int ans = obj.lengthOfLHS(inputArr, sze);  
  
System.out.println("The length of the longest Harmonic subsequence is: " + ans);  
  
System.out.println( "\n" );  
  
// input array  
int inputArr1[] = {0, 1, 5, 8, 10, 19, 15, 25, 30, 40, 45, 7, 11};  
sze = inputArr1.length; // computing size of the input array  
  
System.out.println("For the input array: ");  
for(int i = 0 ; i < sze; i++)  
{  
System.out.print(inputArr1[i] + " ");  
}  
System.out.println( );  
  
// invoking the method lengthOfLHS() for computing the   
// longest length of the Harmonic subsequence  
ans = obj.lengthOfLHS(inputArr1, sze);  
System.out.println("The length of the longest Harmonic subsequence is: " + ans);  
  
  
  
}  
}  